colors={['#2d6a4f', '#48bb78']}
        colors={['#FFDEE9', '#B5FFFC']} // Example gradient colors

colors={['#E8F8E6', '#C1F4C5']}

colors={['#FFDEE9', '#D4FC79']}
colors={['#E3F9A6', '#A8E6CF']}
colors={['#B5FFFC', '#A7F3D0']}
colors={['#D4FC79', '#96E6A1']}
colors={['#C1F4C5', '#B5FFFC']}



// import React, { useRef, useState, useEffect } from 'react';
// import { 
//   View, 
//   Text, 
//   StyleSheet, 
//   Image, 
//   TouchableOpacity, 
//   ScrollView,
//   Animated,
//   Dimensions,
//   PanResponder,
//   StatusBar
// } from 'react-native';
// import { Ionicons } from '@expo/vector-icons';
// import { useRouter } from 'expo-router';
// import { useSafeAreaInsets } from 'react-native-safe-area-context';

// const { height: SCREEN_HEIGHT, width: SCREEN_WIDTH } = Dimensions.get('window');

// export default function RecipeDetailScreen() {
//   const router = useRouter();
//   const insets = useSafeAreaInsets();
  
//   // Calculate header height including safe area insets
//   const HEADER_HEIGHT = 100 + insets.top; // Approximate header height + top inset
  
//   // Adjust MAX_TRANSLATE_Y to stop below the header
// //   const MAX_TRANSLATE_Y = -(SCREEN_HEIGHT * 0.5) + HEADER_HEIGHT + 20; // 20px buffer below header
//   const MAX_TRANSLATE_Y = -(SCREEN_HEIGHT * 0.42) + HEADER_HEIGHT + 30;

//   const translateY = useRef(new Animated.Value(0)).current;
//   const lastGestureDy = useRef(0);
//   const scrollOffset = useRef(0);
//   const scrollViewRef = useRef(null);
  
//   // Recipe data
//   const recipe = {
//     name: "Ramen",
//     timeInfo: "Lunch / 15 mins",
//     image: require('../../assets/food.png'),
//     nutrition: {
//       energy: "100 k",
//       protein: "15 g",
//       carbs: "58 g",
//       fat: "20 g"
//     },
//     servings: 2,
//     ingredients: [
//       { name: "Chicken breasts", amount: "250 g" },
//       { name: "Unsalted butter", amount: "1 tbsp" },
//       { name: "Sesame or vegetable oil", amount: "2 tsp" },
//       { name: "Fresh ginger", amount: "2 tsp" },
//       { name: "Large eggs", amount: "100 g" },
//       { name: "Ramen noodles", amount: "200 g" },
//       { name: "Bok choy", amount: "2 pieces" },
//       { name: "Green onions", amount: "3 stalks" },
//       { name: "Soy sauce", amount: "3 tbsp" },
//       { name: "Mirin", amount: "1 tbsp" },
//     ]
//   };

//   const panResponder = useRef(
//     PanResponder.create({
//       onMoveShouldSetPanResponder: (_, gestureState) => {
//         const { dy } = gestureState;
//         // Only respond to vertical gestures
//         return Math.abs(dy) > 5;
//       },
//       onPanResponderGrant: () => {
//         translateY.setOffset(lastGestureDy.current);
//       },
//       onPanResponderMove: (_, gestureState) => {
//         const { dy } = gestureState;
        
//         // If scrolled to top of ScrollView and trying to pull down
//         if (scrollOffset.current <= 0 && dy > 0) {
//           translateY.setValue(dy);
//         } 
//         // If at bottom position and trying to swipe up
//         else if (lastGestureDy.current === 0 && dy < 0) {
//           // Limit upward movement to MAX_TRANSLATE_Y
//           const newTranslateY = Math.max(dy, MAX_TRANSLATE_Y - lastGestureDy.current);
//           translateY.setValue(newTranslateY);
//         }
//       },
//       onPanResponderRelease: (_, gestureState) => {
//         translateY.flattenOffset();
//         const { dy } = gestureState;
        
//         // If pulled down enough when at top of ScrollView
//         if (scrollOffset.current <= 0 && dy > 50) {
//           snapToBottom();
//         } 
//         // If swiped up enough when at bottom position
//         else if (lastGestureDy.current === 0 && dy < -50) {
//           snapToTop();
//         } 
//         // Otherwise snap back to current position
//         else if (scrollOffset.current <= 0) {
//           if (lastGestureDy.current === 0) {
//             snapToBottom();
//           } else {
//             snapToTop();
//           }
//         }
//       }
//     })
//   ).current;

//   const snapToTop = () => {
//     lastGestureDy.current = MAX_TRANSLATE_Y;
//     Animated.spring(translateY, {
//       toValue: MAX_TRANSLATE_Y,
//       useNativeDriver: true,
//     }).start();
//   };

//   const snapToBottom = () => {
//     lastGestureDy.current = 0;
//     Animated.spring(translateY, {
//       toValue: 0,
//       useNativeDriver: true,
//     }).start();
//   };

//   const handleScroll = (event) => {
//     scrollOffset.current = event.nativeEvent.contentOffset.y;
//   };

//   return (
//     <View style={styles.container}>
//       {/* Recipe image */}
//       <Image source={recipe.image} style={styles.recipeImage} />
      
//       {/* Bottom sheet */}
//       <Animated.View 
//         style={[
//           styles.bottomSheet,
//           { transform: [{ translateY: translateY }] }
//         ]}
//         {...panResponder.panHandlers}
//       >
//         {/* Handle indicator */}
//         <View style={styles.handleIndicator} />
        
//         {/* Recipe title and refresh button */}
//         <View style={styles.titleContainer}>
//           <TouchableOpacity style={styles.refreshButton}>
//             <Ionicons name="refresh" size={22} color="black" />
//           </TouchableOpacity>
//           <Text style={styles.recipeTitle}>{recipe.name}</Text>
//           <Text style={styles.recipeSubtitle}>{recipe.timeInfo}</Text>
//         </View>
        
//         {/* Nutrition info */}
//         <View style={styles.nutritionContainer}>
//           <View style={styles.nutritionItem}>
//             <Text style={styles.nutritionValue}>{recipe.nutrition.energy}</Text>
//             <Text style={styles.nutritionLabel}>Energy</Text>
//           </View>
//           <View style={styles.nutritionItem}>
//             <Text style={styles.nutritionValue}>{recipe.nutrition.protein}</Text>
//             <Text style={styles.nutritionLabel}>Protein</Text>
//           </View>
//           <View style={styles.nutritionItem}>
//             <Text style={styles.nutritionValue}>{recipe.nutrition.carbs}</Text>
//             <Text style={styles.nutritionLabel}>Carbs</Text>
//           </View>
//           <View style={styles.nutritionItem}>
//             <Text style={styles.nutritionValue}>{recipe.nutrition.fat}</Text>
//             <Text style={styles.nutritionLabel}>Fat</Text>
//           </View>
//         </View>
        
//         {/* Ingredients section */}
//         <View style={styles.sectionHeader}>
//           <Text style={styles.sectionTitle}>Ingredients</Text>
//           <Text style={styles.servings}>{recipe.servings} serves</Text>
//           <View style={styles.servingControls}>
//             <TouchableOpacity style={styles.servingButton}>
//               <Ionicons name="remove" size={20} color="black" />
//             </TouchableOpacity>
//             <TouchableOpacity style={styles.servingButton}>
//               <Ionicons name="add" size={20} color="black" />
//             </TouchableOpacity>
//           </View>
//         </View>
        
//         {/* Ingredients list */}
//         <ScrollView
//           ref={scrollViewRef}
//           onScroll={handleScroll}
//           scrollEventThrottle={16}
//           style={styles.ingredientsList}
//           showsVerticalScrollIndicator={false}
//         >
//           {recipe.ingredients.map((ingredient, index) => (
//             <View key={index} style={styles.ingredientItem}>
//               <Text style={styles.ingredientName}>{ingredient.name}</Text>
//               <Text style={styles.ingredientAmount}>{ingredient.amount}</Text>
//             </View>
//           ))}
          
//           {/* Start cooking button */}
//           <TouchableOpacity style={styles.startCookingButton}>
//             <Text style={styles.startCookingText}>Start cooking</Text>
//           </TouchableOpacity>
          
//           {/* Add padding at the bottom for better scrolling */}
//           <View style={{ height: 40 }} />
//         </ScrollView>
//       </Animated.View>
//     </View>
//   );
// }

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: '#f5f5f5',
//   },
//   recipeImage: {
//     width: '100%',
//     height: SCREEN_HEIGHT * 0.5,
//     resizeMode: 'cover',
//   },
//   bottomSheet: {
//     position: 'absolute',
//     bottom: -20, // Extra space to account for border radius
//     left: 0,
//     right: 0,
//     height: SCREEN_HEIGHT * 0.65,
//     backgroundColor: 'white',
//     borderTopLeftRadius: 25,
//     borderTopRightRadius: 25,
//     paddingHorizontal: 20,
//     paddingBottom: 20,
//     // Add shadow for better visual separation from header
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: -3 },
//     shadowOpacity: 0.1,
//     shadowRadius: 5,
//     elevation: 5,
//   },
//   handleIndicator: {
//     width: 40,
//     height: 5,
//     backgroundColor: '#e0e0e0',
//     borderRadius: 3,
//     alignSelf: 'center',
//     marginTop: 10,
//     marginBottom: 10,
//   },
//   titleContainer: {
//     alignItems: 'center',
//     marginBottom: 20,
//   },
//   refreshButton: {
//     position: 'absolute',
//     left: 0,
//     top: 0,
//     width: 40,
//     height: 40,
//     justifyContent: 'center',
//     alignItems: 'center',
//   },
//   recipeTitle: {
//     fontSize: 24,
//     fontWeight: 'bold',
//     textAlign: 'center',
//   },
//   recipeSubtitle: {
//     fontSize: 16,
//     color: '#666',
//     textAlign: 'center',
//   },
//   nutritionContainer: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     marginBottom: 20,
//     paddingBottom: 20,
//     borderBottomWidth: 1,
//     borderBottomColor: '#f0f0f0',
//   },
//   nutritionItem: {
//     alignItems: 'center',
//   },
//   nutritionValue: {
//     fontSize: 16,
//     fontWeight: 'bold',
//   },
//   nutritionLabel: {
//     fontSize: 14,
//     color: '#666',
//   },
//   sectionHeader: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     marginBottom: 15,
//   },
//   sectionTitle: {
//     fontSize: 18,
//     fontWeight: 'bold',
//   },
//   servings: {
//     fontSize: 14,
//     color: '#666',
//     marginLeft: 10,
//   },
//   servingControls: {
//     flexDirection: 'row',
//     marginLeft: 'auto',
//   },
//   servingButton: {
//     width: 30,
//     height: 30,
//     borderWidth: 1,
//     borderColor: '#e0e0e0',
//     borderRadius: 15,
//     justifyContent: 'center',
//     alignItems: 'center',
//     marginLeft: 10,
//   },
//   ingredientsList: {
//     flex: 1,
//   },
//   ingredientItem: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     paddingVertical: 12,
//     borderBottomWidth: 1,
//     borderBottomColor: '#f0f0f0',
//   },
//   ingredientName: {
//     fontSize: 16,
//   },
//   ingredientAmount: {
//     fontSize: 16,
//     color: '#999',
//   },
//   startCookingButton: {
//     backgroundColor: '#4CAF50',
//     borderRadius: 10,
//     paddingVertical: 15,
//     alignItems: 'center',
//     marginTop: 20,
//   },
//   startCookingText: {
//     color: 'white',
//     fontSize: 16,
//     fontWeight: 'bold',
//   },
// });



// import React, { useRef } from 'react';
// import { 
//   View, 
//   Text, 
//   StyleSheet, 
//   Image, 
//   TouchableOpacity, 
//   ScrollView,
//   Animated,
//   Dimensions,
//   PanResponder
// } from 'react-native';
// import { Ionicons } from '@expo/vector-icons';

// const { height: SCREEN_HEIGHT } = Dimensions.get('window');
// const BOTTOM_SHEET_HEIGHT = SCREEN_HEIGHT * 0.65; // Height of the bottom sheet
// const MAX_TRANSLATE_Y = -BOTTOM_SHEET_HEIGHT + 100; // Maximum swipe-up height

// export default function RecipeDetailScreen() {
//   const translateY = useRef(new Animated.Value(0)).current;
//   const lastGestureDy = useRef(0);
//   const scrollOffset = useRef(0);

//   const panResponder = useRef(
//     PanResponder.create({
//       onMoveShouldSetPanResponder: (_, gestureState) => Math.abs(gestureState.dy) > 5,
//       onPanResponderGrant: () => {
//         translateY.setOffset(lastGestureDy.current);
//       },
//       onPanResponderMove: (_, gestureState) => {
//         const { dy } = gestureState;
        
//         if (scrollOffset.current <= 0 && dy > 0) {
//           translateY.setValue(dy);
//         } else if (lastGestureDy.current === 0 && dy < 0) {
//           translateY.setValue(Math.max(dy, MAX_TRANSLATE_Y - lastGestureDy.current));
//         }
//       },
//       onPanResponderRelease: (_, gestureState) => {
//         translateY.flattenOffset();
//         const { dy } = gestureState;
        
//         if (scrollOffset.current <= 0 && dy > 50) {
//           snapToBottom();
//         } else if (lastGestureDy.current === 0 && dy < -50) {
//           snapToTop();
//         } else {
//           if (lastGestureDy.current === 0) {
//             snapToBottom();
//           } else {
//             snapToTop();
//           }
//         }
//       }
//     })
//   ).current;

//   const snapToTop = () => {
//     lastGestureDy.current = MAX_TRANSLATE_Y;
//     Animated.spring(translateY, {
//       toValue: MAX_TRANSLATE_Y,
//       useNativeDriver: true,
//     }).start();
//   };

//   const snapToBottom = () => {
//     lastGestureDy.current = 0;
//     Animated.spring(translateY, {
//       toValue: 0,
//       useNativeDriver: true,
//     }).start();
//   };

//   const handleScroll = (event) => {
//     scrollOffset.current = event.nativeEvent.contentOffset.y;
//   };

//   return (
//     <View style={styles.container}>
//       <Image source={require('../../assets/food.png')} style={styles.recipeImage} />
      
//       <Animated.View 
//         style={[
//           styles.bottomSheet,
//           { transform: [{ translateY }] }
//         ]}
//         {...panResponder.panHandlers}
//       >
//         <View style={styles.handleIndicator} />

//         <View style={styles.titleContainer}>
//           <TouchableOpacity style={styles.refreshButton}>
//             <Ionicons name="refresh" size={22} color="black" />
//           </TouchableOpacity>
//           <Text style={styles.recipeTitle}>Ramen</Text>
//           <Text style={styles.recipeSubtitle}>Lunch / 15 mins</Text>
//         </View>

//         <View style={styles.nutritionContainer}>
//           {["100 k", "15 g", "58 g", "20 g"].map((value, index) => (
//             <View key={index} style={styles.nutritionItem}>
//               <Text style={styles.nutritionValue}>{value}</Text>
//               <Text style={styles.nutritionLabel}>
//                 {["Energy", "Protein", "Carbs", "Fat"][index]}
//               </Text>
//             </View>
//           ))}
//         </View>

//         <View style={styles.sectionHeader}>
//           <Text style={styles.sectionTitle}>Ingredients</Text>
//           <Text style={styles.servings}>2 serves</Text>
//         </View>

//         <ScrollView
//           onScroll={handleScroll}
//           scrollEventThrottle={16}
//           style={styles.ingredientsList}
//           showsVerticalScrollIndicator={false}
//         >
//           {[
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Unsalted butter", amount: "1 tbsp" },
//             { name: "Sesame oil", amount: "2 tsp" }
//           ].map((ingredient, index) => (
//             <View key={index} style={styles.ingredientItem}>
//               <Text style={styles.ingredientName}>{ingredient.name}</Text>
//               <Text style={styles.ingredientAmount}>{ingredient.amount}</Text>
//             </View>
//           ))}

//           <TouchableOpacity style={styles.startCookingButton}>
//             <Text style={styles.startCookingText}>Start cooking</Text>
//           </TouchableOpacity>

//           <View style={{ height: 40 }} />
//         </ScrollView>
//       </Animated.View>
//     </View>
//   );
// }

// const styles = StyleSheet.create({
//   container: { flex: 1, backgroundColor: '#f5f5f5' },
//   recipeImage: { width: '100%', height: SCREEN_HEIGHT * 0.5, resizeMode: 'cover' },
//   bottomSheet: {
//     position: 'absolute',
//     bottom: -20,
//     left: 0,
//     right: 0,
//     height: SCREEN_HEIGHT * 0.65,
//     backgroundColor: 'white',
//     borderTopLeftRadius: 25,
//     borderTopRightRadius: 25,
//     paddingHorizontal: 20,
//     paddingBottom: 20,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: -3 },
//     shadowOpacity: 0.1,
//     shadowRadius: 5,
//     elevation: 5,
//   },
//   handleIndicator: { width: 40, height: 5, backgroundColor: '#e0e0e0', borderRadius: 3, alignSelf: 'center', marginVertical: 10 },
//   titleContainer: { alignItems: 'center', marginBottom: 20 },
//   refreshButton: { position: 'absolute', left: 0, top: 0, width: 40, height: 40, justifyContent: 'center', alignItems: 'center' },
//   recipeTitle: { fontSize: 24, fontWeight: 'bold', textAlign: 'center' },
//   recipeSubtitle: { fontSize: 16, color: '#666', textAlign: 'center' },
//   nutritionContainer: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 20, paddingBottom: 20, borderBottomWidth: 1, borderBottomColor: '#f0f0f0' },
//   nutritionItem: { alignItems: 'center' },
//   nutritionValue: { fontSize: 16, fontWeight: 'bold' },
//   nutritionLabel: { fontSize: 14, color: '#666' },
//   sectionHeader: { flexDirection: 'row', alignItems: 'center', marginBottom: 15 },
//   sectionTitle: { fontSize: 18, fontWeight: 'bold' },
//   servings: { fontSize: 14, color: '#666', marginLeft: 10 },
//   ingredientsList: { flex: 1 },
//   ingredientItem: { flexDirection: 'row', justifyContent: 'space-between', paddingVertical: 12, borderBottomWidth: 1, borderBottomColor: '#f0f0f0' },
//   ingredientName: { fontSize: 16 },
//   ingredientAmount: { fontSize: 16, color: '#999' },
//   startCookingButton: { backgroundColor: '#4CAF50', borderRadius: 10, paddingVertical: 15, alignItems: 'center', marginTop: 20 },
//   startCookingText: { color: 'white', fontSize: 16, fontWeight: 'bold' },
// });
// import React, { useRef } from 'react';
// import { 
//   View, 
//   Text, 
//   StyleSheet, 
//   Image, 
//   TouchableOpacity, 
//   ScrollView,
//   Animated,
//   Dimensions,
//   PanResponder
// } from 'react-native';
// import { Ionicons } from '@expo/vector-icons';

// const { height: SCREEN_HEIGHT } = Dimensions.get('window');
// const BOTTOM_SHEET_HEIGHT = SCREEN_HEIGHT * 0.55; // Reduced max height
// const MAX_TRANSLATE_Y = -BOTTOM_SHEET_HEIGHT + 120; // Less swipe-up height

// export default function RecipeDetailScreen() {
//   const translateY = useRef(new Animated.Value(0)).current;
//   const lastGestureDy = useRef(0);
//   const scrollOffset = useRef(0);

//   const panResponder = useRef(
//     PanResponder.create({
//       onMoveShouldSetPanResponder: (_, gestureState) => Math.abs(gestureState.dy) > 5,
//       onPanResponderGrant: () => {
//         translateY.setOffset(lastGestureDy.current);
//       },
//       onPanResponderMove: (_, gestureState) => {
//         if (scrollOffset.current > 0) return; // Prevents swipe while scrolling

//         const { dy } = gestureState;
//         if (lastGestureDy.current === 0 && dy < 0) {
//           translateY.setValue(Math.max(dy, MAX_TRANSLATE_Y - lastGestureDy.current));
//         } else if (dy > 0) {
//           translateY.setValue(dy);
//         }
//       },
//       onPanResponderRelease: (_, gestureState) => {
//         translateY.flattenOffset();
//         const { dy } = gestureState;

//         if (scrollOffset.current > 0) return; // Prevents swipe when list is scrolled

//         if (dy < -50) {
//           snapToTop();
//         } else {
//           snapToBottom();
//         }
//       }
//     })
//   ).current;

//   const snapToTop = () => {
//     lastGestureDy.current = MAX_TRANSLATE_Y;
//     Animated.spring(translateY, {
//       toValue: MAX_TRANSLATE_Y,
//       useNativeDriver: true,
//     }).start();
//   };

//   const snapToBottom = () => {
//     lastGestureDy.current = 0;
//     Animated.spring(translateY, {
//       toValue: 0,
//       useNativeDriver: true,
//     }).start();
//   };

//   return (
//     <View style={styles.container}>
//       <Image source={require('../../assets/food.png')} style={styles.recipeImage} />
      
//       <Animated.View 
//         style={[
//           styles.bottomSheet,
//           { transform: [{ translateY }] }
//         ]}
//         {...panResponder.panHandlers}
//       >
//         <View style={styles.handleIndicator} />

//         <View style={styles.titleContainer}>
//           <TouchableOpacity style={styles.refreshButton}>
//             <Ionicons name="refresh" size={22} color="black" />
//           </TouchableOpacity>
//           <Text style={styles.recipeTitle}>Ramen</Text>
//           <Text style={styles.recipeSubtitle}>Lunch / 15 mins</Text>
//         </View>

//         <View style={styles.nutritionContainer}>
//           {["100 k", "15 g", "58 g", "20 g"].map((value, index) => (
//             <View key={index} style={styles.nutritionItem}>
//               <Text style={styles.nutritionValue}>{value}</Text>
//               <Text style={styles.nutritionLabel}>
//                 {["Energy", "Protein", "Carbs", "Fat"][index]}
//               </Text>
//             </View>
//           ))}
//         </View>

//         <View style={styles.sectionHeader}>
//           <Text style={styles.sectionTitle}>Ingredients</Text>
//           <Text style={styles.servings}>2 serves</Text>
//         </View>

//         <ScrollView
//           onScroll={(event) => {
//             scrollOffset.current = event.nativeEvent.contentOffset.y;
//           }}
//           onScrollEndDrag={() => (scrollOffset.current = 0)}
//           scrollEventThrottle={16}
//           style={styles.ingredientsList}
//           showsVerticalScrollIndicator={false}
//         >
//           {[
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Unsalted butter", amount: "1 tbsp" },
//             { name: "Sesame oil", amount: "2 tsp" }
//           ].map((ingredient, index) => (
//             <View key={index} style={styles.ingredientItem}>
//               <Text style={styles.ingredientName}>{ingredient.name}</Text>
//               <Text style={styles.ingredientAmount}>{ingredient.amount}</Text>
//             </View>
//           ))}

//           <TouchableOpacity style={styles.startCookingButton}>
//             <Text style={styles.startCookingText}>Start cooking</Text>
//           </TouchableOpacity>

//           <View style={{ height: 40 }} />
//         </ScrollView>
//       </Animated.View>
//     </View>
//   );
// }

// const styles = StyleSheet.create({
//   container: { flex: 1, backgroundColor: '#f5f5f5' },
//   recipeImage: { width: '100%', height: SCREEN_HEIGHT * 0.5, resizeMode: 'cover' },
//   bottomSheet: {
//     position: 'absolute',
//     bottom: -20,
//     left: 0,
//     right: 0,
//     height: SCREEN_HEIGHT * 0.55, // Reduced height
//     backgroundColor: 'white',
//     borderTopLeftRadius: 25,
//     borderTopRightRadius: 25,
//     paddingHorizontal: 20,
//     paddingBottom: 20,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: -3 },
//     shadowOpacity: 0.1,
//     shadowRadius: 5,
//     elevation: 5,
//   },
//   handleIndicator: { width: 40, height: 5, backgroundColor: '#e0e0e0', borderRadius: 3, alignSelf: 'center', marginVertical: 10 },
//   titleContainer: { alignItems: 'center', marginBottom: 20 },
//   refreshButton: { position: 'absolute', left: 0, top: 0, width: 40, height: 40, justifyContent: 'center', alignItems: 'center' },
//   recipeTitle: { fontSize: 24, fontWeight: 'bold', textAlign: 'center' },
//   recipeSubtitle: { fontSize: 16, color: '#666', textAlign: 'center' },
//   nutritionContainer: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 20, paddingBottom: 20, borderBottomWidth: 1, borderBottomColor: '#f0f0f0' },
//   nutritionItem: { alignItems: 'center' },
//   nutritionValue: { fontSize: 16, fontWeight: 'bold' },
//   nutritionLabel: { fontSize: 14, color: '#666' },
//   sectionHeader: { flexDirection: 'row', alignItems: 'center', marginBottom: 15 },
//   sectionTitle: { fontSize: 18, fontWeight: 'bold' },
//   servings: { fontSize: 14, color: '#666', marginLeft: 10 },
//   ingredientsList: { flex: 1 },
//   ingredientItem: { flexDirection: 'row', justifyContent: 'space-between', paddingVertical: 12, borderBottomWidth: 1, borderBottomColor: '#f0f0f0' },
//   ingredientName: { fontSize: 16 },
//   ingredientAmount: { fontSize: 16, color: '#999' },
//   startCookingButton: { backgroundColor: '#4CAF50', borderRadius: 10, paddingVertical: 15, alignItems: 'center', marginTop: 20 },
//   startCookingText: { color: 'white', fontSize: 16, fontWeight: 'bold' },
// });



// import React, { useRef } from 'react';
// import { 
//   View, 
//   Text, 
//   StyleSheet, 
//   Image, 
//   TouchableOpacity, 
//   ScrollView,
//   Animated,
//   Dimensions,
//   PanResponder
// } from 'react-native';
// import { Ionicons } from '@expo/vector-icons';

// const { height: SCREEN_HEIGHT } = Dimensions.get('window');
// const BOTTOM_SHEET_HEIGHT = SCREEN_HEIGHT * 0.55;
// const MAX_TRANSLATE_Y = -BOTTOM_SHEET_HEIGHT + 120;

// export default function RecipeDetailScreen() {
//   const translateY = useRef(new Animated.Value(0)).current;
//   const lastGestureDy = useRef(0);
//   const scrollOffset = useRef(0);

//   const panResponder = useRef(
//     PanResponder.create({
//       onMoveShouldSetPanResponder: (_, gestureState) => Math.abs(gestureState.dy) > 5,
//       onPanResponderGrant: () => {
//         translateY.setOffset(lastGestureDy.current);
//       },
//       onPanResponderMove: (_, gestureState) => {
//         if (scrollOffset.current > 0) return;

//         const { dy } = gestureState;
//         if (lastGestureDy.current === 0 && dy < 0) {
//           translateY.setValue(Math.max(dy, MAX_TRANSLATE_Y - lastGestureDy.current));
//         } else if (dy > 0) {
//           translateY.setValue(dy);
//         }
//       },
//       onPanResponderRelease: (_, gestureState) => {
//         translateY.flattenOffset();
//         const { dy } = gestureState;

//         if (scrollOffset.current > 0) return;

//         if (dy < -50) {
//           snapToTop();
//         } else {
//           snapToBottom();
//         }
//       }
//     })
//   ).current;

//   const snapToTop = () => {
//     lastGestureDy.current = MAX_TRANSLATE_Y;
//     Animated.spring(translateY, {
//       toValue: MAX_TRANSLATE_Y,
//       useNativeDriver: true,
//     }).start();
//   };

//   const snapToBottom = () => {
//     lastGestureDy.current = 0;
//     Animated.spring(translateY, {
//       toValue: 0,
//       useNativeDriver: true,
//     }).start();
//   };

//   return (
//     <View style={styles.container}>
//       <Image source={require('../../assets/food.png')} style={styles.recipeImage} />
      
//       <Animated.View 
//         style={[
//           styles.bottomSheet,
//           { transform: [{ translateY }] }
//         ]}
//         {...panResponder.panHandlers}
//       >
//         <View style={styles.handleIndicator} />

//         <View style={styles.titleContainer}>
//           <TouchableOpacity style={styles.refreshButton}>
//             <Ionicons name="refresh" size={22} color="black" />
//           </TouchableOpacity>
//           <Text style={styles.recipeTitle}>Ramen</Text>
//           <Text style={styles.recipeSubtitle}>Lunch / 15 mins</Text>
//         </View>

//         <View style={styles.nutritionContainer}>
//           {["100 k", "15 g", "58 g", "20 g"].map((value, index) => (
//             <View key={index} style={styles.nutritionItem}>
//               <Text style={styles.nutritionValue}>{value}</Text>
//               <Text style={styles.nutritionLabel}>
//                 {["Energy", "Protein", "Carbs", "Fat"][index]}
//               </Text>
//             </View>
//           ))}
//         </View>

//         <View style={styles.sectionHeader}>
//           <Text style={styles.sectionTitle}>Ingredients</Text>
//           <Text style={styles.servings}>2 serves</Text>
//         </View>

//         {/* Scrollable Ingredients List */}
//         <ScrollView
//           onScroll={(event) => {
//             scrollOffset.current = event.nativeEvent.contentOffset.y;
//           }}
//           onScrollEndDrag={() => (scrollOffset.current = 0)}
//           scrollEventThrottle={16}
//           style={styles.ingredientsList}
//           showsVerticalScrollIndicator={false}
//           contentContainerStyle={{ paddingBottom: 80 }} // Prevents overlap with the fixed button
//         >
//           {[
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Unsalted butter", amount: "1 tbsp" },
//             { name: "Sesame oil", amount: "2 tsp" }
//           ].map((ingredient, index) => (
//             <View key={index} style={styles.ingredientItem}>
//               <Text style={styles.ingredientName}>{ingredient.name}</Text>
//               <Text style={styles.ingredientAmount}>{ingredient.amount}</Text>
//             </View>
//           ))}
//         </ScrollView>

//         {/* Fixed "Start Cooking" Button */}
//         <View style={styles.fixedButtonContainer}>
//           <TouchableOpacity style={styles.startCookingButton}>
//             <Text style={styles.startCookingText}>Start cooking</Text>
//           </TouchableOpacity>
//         </View>

//       </Animated.View>
//     </View>
//   );
// }

// const styles = StyleSheet.create({
//   container: { flex: 1, backgroundColor: '#f5f5f5' },
//   recipeImage: { width: '100%', height: SCREEN_HEIGHT * 0.5, resizeMode: 'cover' },
//   bottomSheet: {
//     position: 'absolute',
//     bottom: -20,
//     left: 0,
//     right: 0,
//     height: SCREEN_HEIGHT * 0.55,
//     backgroundColor: 'white',
//     borderTopLeftRadius: 25,
//     borderTopRightRadius: 25,
//     paddingHorizontal: 20,
//     paddingBottom: 20,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: -3 },
//     shadowOpacity: 0.1,
//     shadowRadius: 5,
//     elevation: 5,
//   },
//   handleIndicator: { width: 40, height: 5, backgroundColor: '#e0e0e0', borderRadius: 3, alignSelf: 'center', marginVertical: 10 },
//   titleContainer: { alignItems: 'center', marginBottom: 20 },
//   refreshButton: { position: 'absolute', left: 0, top: 0, width: 40, height: 40, justifyContent: 'center', alignItems: 'center' },
//   recipeTitle: { fontSize: 24, fontWeight: 'bold', textAlign: 'center' },
//   recipeSubtitle: { fontSize: 16, color: '#666', textAlign: 'center' },
//   nutritionContainer: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 20, paddingBottom: 20, borderBottomWidth: 1, borderBottomColor: '#f0f0f0' },
//   nutritionItem: { alignItems: 'center' },
//   nutritionValue: { fontSize: 16, fontWeight: 'bold' },
//   nutritionLabel: { fontSize: 14, color: '#666' },
//   sectionHeader: { flexDirection: 'row', alignItems: 'center', marginBottom: 15 },
//   sectionTitle: { fontSize: 18, fontWeight: 'bold' },
//   servings: { fontSize: 14, color: '#666', marginLeft: 10 },
//   ingredientsList: { flex: 1 },
//   ingredientItem: { flexDirection: 'row', justifyContent: 'space-between', paddingVertical: 12, borderBottomWidth: 1, borderBottomColor: '#f0f0f0' },
//   ingredientName: { fontSize: 16 },
//   ingredientAmount: { fontSize: 16, color: '#999' },
//   fixedButtonContainer: { 
//     position: 'absolute', 
//     bottom: 10, 
//     left: 20, 
//     right: 20 
//   },
//   startCookingButton: { 
//     backgroundColor: '#4CAF50', 
//     borderRadius: 10, 
//     paddingVertical: 15, 
//     alignItems: 'center' 
//   },
//   startCookingText: { 
//     color: 'white', 
//     fontSize: 16, 
//     fontWeight: 'bold' 
//   },
// });



// import React, { useRef } from 'react';
// import { 
//   View, 
//   Text, 
//   StyleSheet, 
//   Image, 
//   TouchableOpacity, 
//   ScrollView,
//   Animated,
//   Dimensions,
//   PanResponder
// } from 'react-native';
// import { Ionicons } from '@expo/vector-icons';

// const { height: SCREEN_HEIGHT } = Dimensions.get('window');
// const BOTTOM_SHEET_HEIGHT = SCREEN_HEIGHT * 0.75; // Only 75% of screen height now
// const MAX_TRANSLATE_Y = -BOTTOM_SHEET_HEIGHT + 120; // New snapping height

// export default function RecipeDetailScreen() {
//   const translateY = useRef(new Animated.Value(0)).current;
//   const lastGestureDy = useRef(0);
//   const scrollOffset = useRef(0);

//   const panResponder = useRef(
//     PanResponder.create({
//       onMoveShouldSetPanResponder: (_, gestureState) => Math.abs(gestureState.dy) > 5,
//       onPanResponderGrant: () => {
//         translateY.setOffset(lastGestureDy.current);
//       },
//       onPanResponderMove: (_, gestureState) => {
//         if (scrollOffset.current > 0) return;

//         const { dy } = gestureState;
//         if (lastGestureDy.current === 0 && dy < 0) {
//           translateY.setValue(Math.max(dy, MAX_TRANSLATE_Y - lastGestureDy.current));
//         } else if (dy > 0) {
//           translateY.setValue(dy);
//         }
//       },
//       onPanResponderRelease: (_, gestureState) => {
//         translateY.flattenOffset();
//         const { dy } = gestureState;

//         if (scrollOffset.current > 0) return;

//         if (dy < -50) {
//           snapToTop();
//         } else {
//           snapToBottom();
//         }
//       }
//     })
//   ).current;

//   const snapToTop = () => {
//     lastGestureDy.current = MAX_TRANSLATE_Y;
//     Animated.spring(translateY, {
//       toValue: MAX_TRANSLATE_Y,
//       useNativeDriver: true,
//     }).start();
//   };

//   const snapToBottom = () => {
//     lastGestureDy.current = 0;
//     Animated.spring(translateY, {
//       toValue: 0,
//       useNativeDriver: true,
//     }).start();
//   };

//   return (
//     <View style={styles.container}>
//       <Image source={require('../../assets/food.png')} style={styles.recipeImage} />
      
//       {/* Bottom Sheet */}
//       <Animated.View 
//         style={[
//           styles.bottomSheet,
//           { transform: [{ translateY }] }
//         ]}
//         {...panResponder.panHandlers}
//       >
//         <View style={styles.handleIndicator} />

//         <View style={styles.titleContainer}>
//           <TouchableOpacity style={styles.refreshButton}>
//             <Ionicons name="refresh" size={22} color="black" />
//           </TouchableOpacity>
//           <Text style={styles.recipeTitle}>Ramen</Text>
//           <Text style={styles.recipeSubtitle}>Lunch / 15 mins</Text>
//         </View>

//         <View style={styles.nutritionContainer}>
//           {["100 k", "15 g", "58 g", "20 g"].map((value, index) => (
//             <View key={index} style={styles.nutritionItem}>
//               <Text style={styles.nutritionValue}>{value}</Text>
//               <Text style={styles.nutritionLabel}>
//                 {["Energy", "Protein", "Carbs", "Fat"][index]}
//               </Text>
//             </View>
//           ))}
//         </View>

//         <View style={styles.sectionHeader}>
//           <Text style={styles.sectionTitle}>Ingredients</Text>
//           <Text style={styles.servings}>2 serves</Text>
//         </View>

//         {/* Scrollable Ingredients List */}
//         <ScrollView
//           onScroll={(event) => {
//             scrollOffset.current = event.nativeEvent.contentOffset.y;
//           }}
//           onScrollEndDrag={() => (scrollOffset.current = 0)}
//           scrollEventThrottle={16}
//           style={styles.ingredientsList}
//           showsVerticalScrollIndicator={false}
//           contentContainerStyle={{ paddingBottom: 40 }} // Padding to avoid overlap
//         >
//           {[
//             { name: "Chicken breasts", amount: "250 g" },
//             { name: "Unsalted butter", amount: "1 tbsp" },
//             { name: "Sesame oil", amount: "2 tsp" }
//           ].map((ingredient, index) => (
//             <View key={index} style={styles.ingredientItem}>
//               <Text style={styles.ingredientName}>{ingredient.name}</Text>
//               <Text style={styles.ingredientAmount}>{ingredient.amount}</Text>
//             </View>
//           ))}
//         </ScrollView>
//       </Animated.View>

//       {/* Fixed "Start Cooking" Button - Always Stays at Bottom */}
//       <View style={styles.fixedButtonContainer}>
//         <TouchableOpacity style={styles.startCookingButton}>
//           <Text style={styles.startCookingText}>Start cooking</Text>
//         </TouchableOpacity>
//       </View>

//     </View>
//   );
// }

// const styles = StyleSheet.create({
//   container: { flex: 1, backgroundColor: '#f5f5f5' },
//   recipeImage: { width: '100%', height: SCREEN_HEIGHT * 0.5, resizeMode: 'cover' },
//   bottomSheet: {
//     position: 'absolute',
//     bottom: -20,
//     left: 0,
//     right: 0,
//     height: BOTTOM_SHEET_HEIGHT, // Now 75% of screen height
//     backgroundColor: 'white',
//     borderTopLeftRadius: 25,
//     borderTopRightRadius: 25,
//     paddingHorizontal: 20,
//     paddingBottom: 20,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: -3 },
//     shadowOpacity: 0.1,
//     shadowRadius: 5,
//     elevation: 5,
//   },
//   handleIndicator: { width: 40, height: 5, backgroundColor: '#e0e0e0', borderRadius: 3, alignSelf: 'center', marginVertical: 10 },
//   titleContainer: { alignItems: 'center', marginBottom: 20 },
//   refreshButton: { position: 'absolute', left: 0, top: 0, width: 40, height: 40, justifyContent: 'center', alignItems: 'center' },
//   recipeTitle: { fontSize: 24, fontWeight: 'bold', textAlign: 'center' },
//   recipeSubtitle: { fontSize: 16, color: '#666', textAlign: 'center' },
//   nutritionContainer: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 20, paddingBottom: 20, borderBottomWidth: 1, borderBottomColor: '#f0f0f0' },
//   nutritionItem: { alignItems: 'center' },
//   nutritionValue: { fontSize: 16, fontWeight: 'bold' },
//   nutritionLabel: { fontSize: 14, color: '#666' },
//   sectionHeader: { flexDirection: 'row', alignItems: 'center', marginBottom: 15 },
//   sectionTitle: { fontSize: 18, fontWeight: 'bold' },
//   servings: { fontSize: 14, color: '#666', marginLeft: 10 },
//   ingredientsList: { flex: 1 },
//   ingredientItem: { flexDirection: 'row', justifyContent: 'space-between', paddingVertical: 12, borderBottomWidth: 1, borderBottomColor: '#f0f0f0' },
//   ingredientName: { fontSize: 16 },
//   ingredientAmount: { fontSize: 16, color: '#999' },
//   fixedButtonContainer: { 
//     position: 'absolute', 
//     bottom: 10, 
//     left: 20, 
//     right: 20 
//   },
//   startCookingButton: { 
//     backgroundColor: '#4CAF50', 
//     borderRadius: 10, 
//     paddingVertical: 15, 
//     alignItems: 'center' 
//   },
//   startCookingText: { 
//     color: 'white', 
//     fontSize: 16, 
//     fontWeight: 'bold' 
//   },
// });
